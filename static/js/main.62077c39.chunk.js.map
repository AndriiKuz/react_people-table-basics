{"version":3,"sources":["components/PageNav/PageNav.tsx","App.tsx","components/PageTitle/PageTitle.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","types/Sex.ts","components/PersonLink/PersonLink.tsx","utils/constants.ts","components/TableRow/TableRow.tsx","components/TableBody/TableBoby.tsx","components/TableHead/TableHead.tsx","components/Table/Table.tsx","api.ts","utils/getPreparedPeople.ts","pages/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","PageNav","className","role","to","App","PageTitle","title","NotFoundPage","HomePage","Loader","Sex","PersonLink","person","name","sex","slug","Female","API_URL","DOWNLOAD_ERROR_MESSAGE","TableRow","selectedPersonSlug","born","died","mother","father","motherName","fatherName","TableBoby","people","useParams","map","TableHead","Table","wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","ok","Error","json","getPreparedPeople","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","isSuccessfullyLoaded","fetchPeople","peopleFromServer","preparedPeople","useEffect","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.62077c39.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Link = {\n  isActive: boolean;\n};\n\nconst getLinkClass = ({ isActive }: Link) => (\n  classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n);\n\nexport const PageNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={getLinkClass}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={getLinkClass}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { PageNav } from './components/PageNav';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <PageNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\ntype Props = {\n  title: string;\n};\n\nexport const PageTitle: React.FC<Props> = ({ title }) => (\n  <h1 className=\"title\">{title}</h1>\n);\n","import { PageTitle } from '../../components/PageTitle';\n\nexport const NotFoundPage = () => (\n  <PageTitle title=\"Page not found\" />\n);\n","import { PageTitle } from '../../components/PageTitle';\n\nexport const HomePage = () => (\n  <PageTitle title=\"Home Page\" />\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum Sex {\n  Male = 'm',\n  Female = 'f',\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Sex } from '../../types/Sex';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === Sex.Female },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","// eslint-disable-next-line max-len\nexport const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\nexport const DOWNLOAD_ERROR_MESSAGE = 'Something went wrong';\nexport const NOT_FOUND_PEOPLE = 'There are no people on the server';\nexport const NO_DATA = '-';\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { NO_DATA } from '../../utils/constants';\n\ntype Props = {\n  person: Person;\n  selectedPersonSlug: string;\n};\n\nexport const TableRow: React.FC<Props> = ({ person, selectedPersonSlug }) => {\n  const {\n    sex,\n    born,\n    died,\n    slug,\n    mother,\n    father,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === selectedPersonSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NO_DATA\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NO_DATA\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { TableRow } from '../TableRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const TableBoby: React.FC<Props> = ({ people }) => {\n  const { selectedPersonSlug = '' } = useParams();\n\n  return (\n    <tbody>\n      {people.map(person => (\n        <TableRow\n          key={person.slug}\n          person={person}\n          selectedPersonSlug={selectedPersonSlug}\n        />\n      ))}\n    </tbody>\n  );\n};\n","export const TableHead = () => (\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Born</th>\n      <th>Died</th>\n      <th>Mother</th>\n      <th>Father</th>\n    </tr>\n  </thead>\n);\n","import { Person } from '../../types';\nimport { TableBoby } from '../TableBody/TableBoby';\nimport { TableHead } from '../TableHead';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const Table: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <TableHead />\n    <TableBoby people={people} />\n  </table>\n);\n","import { Person } from './types/Person';\nimport { API_URL, DOWNLOAD_ERROR_MESSAGE } from './utils/constants';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  await wait(500);\n\n  try {\n    const response = await fetch(API_URL);\n\n    if (!response.ok) {\n      throw new Error(DOWNLOAD_ERROR_MESSAGE);\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw new Error(DOWNLOAD_ERROR_MESSAGE);\n  }\n}\n","import { Person } from '../types';\n\nexport const getPreparedPeople = (people: Person[]): Person[] => {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { PageTitle } from '../../components/PageTitle';\nimport { Table } from '../../components/Table';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { getPreparedPeople } from '../../utils/getPreparedPeople';\nimport {\n  NOT_FOUND_PEOPLE,\n  DOWNLOAD_ERROR_MESSAGE,\n} from '../../utils/constants';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const isSuccessfullyLoaded = !hasError && !isLoading;\n\n  const fetchPeople = async () => {\n    try {\n      setHasError(false);\n      setIsLoading(true);\n\n      const peopleFromServer = await getPeople();\n      const preparedPeople = getPreparedPeople(peopleFromServer);\n\n      setPeople(preparedPeople);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"People Page\" />\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {DOWNLOAD_ERROR_MESSAGE}\n              </p>\n            )}\n\n          {isSuccessfullyLoaded && !people.length\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                {NOT_FOUND_PEOPLE}\n              </p>\n            )}\n\n          {isSuccessfullyLoaded && people.length && (\n            <Table people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Route,\n  Routes,\n  Navigate,\n  HashRouter as Router,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route path=\":selectedPersonSlug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}